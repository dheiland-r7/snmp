These  perl and Python scripts are for extracting SNMP data from target systems and parsing those file for potentialy usable data.


snmpbw.pl/py   --> A multithreaded perl script for bulk walking targeted host systems for SNMP data

snmpprs.pl/py  --> A perl script for parsing the results of from snmpbw.pl. Looking for usable data

reg_list    --> A list of keyword and regular expression for input to snmprs.pl script

Linux host requirements:

SNMP needs to be installed on linux host. This can be done using the following apt-get command
  apt-get install snmp

Also the following perl module should be installed using cpan.
  cpan -i NetAddr::IP


Syntax    "snmpbw.pl target community timeout threads" 
-----------------------------------------------------------
example-1   ./snmpbw.pl/py 192.168.0.1 public 2 1
example-2   ./snmpbw.pl/py ipfile.txt  public 2 4
-----------------------------------------------------------
community :public or what ever the community string is
timeout   :Timeout is in seconds 
threads   :number of threads to run


Syntax    "snmpprs.pl/py OutputFile" 
-----------------------------------------------------------
example-1   ./snmpprs.pl/py results.txt
example-2   ./snmpprs.pl/py /home/location/results.txt
-----------------------------------------------------------
OutputFile :File name and path where you want the data writen too

reg_list is an editable file. Please use this to add any keyword or regular expression you discover to return usable value. Also please contact me with any recommended additions. Currently there are only a few entries in this file currently.

Return email addresses                --> [A-Z0-9._%+-]+@[A-Z0-9.-]+\.[comnetrg]{3}
Return linux/unix MD5 cipher hashes   --> \$[1-6]\$[0-9A-Z./$]{31}
Return possible MD5s                  --> \"[0-9A-F]{32}\"
Keyword returns trap community string --> traphost


These scripts should be considered usable proof of concept beta code. Further updates will be made to improve the code and better format the output of the data recovered.

